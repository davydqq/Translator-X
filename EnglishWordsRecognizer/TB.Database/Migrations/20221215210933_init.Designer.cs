// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TB.Database;

#nullable disable

namespace TB.Database.Migrations
{
    [DbContext(typeof(TB_DatabaseContext))]
    [Migration("20221215210933_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TB.Database.Entities.Language", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsSupportInteface")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSupportNativeLanguage")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSupportTargetLanguage")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "uk",
                            IsSupportInteface = true,
                            IsSupportNativeLanguage = true,
                            IsSupportTargetLanguage = true,
                            Name = "Ukrainian 🇺🇦"
                        },
                        new
                        {
                            Id = 2,
                            Code = "ru",
                            IsSupportInteface = true,
                            IsSupportNativeLanguage = true,
                            IsSupportTargetLanguage = true,
                            Name = "Russian 🇷🇺"
                        },
                        new
                        {
                            Id = 3,
                            Code = "en",
                            IsSupportInteface = true,
                            IsSupportNativeLanguage = true,
                            IsSupportTargetLanguage = true,
                            Name = "English 🇺🇸"
                        },
                        new
                        {
                            Id = 4,
                            Code = "es",
                            IsSupportInteface = true,
                            IsSupportNativeLanguage = true,
                            IsSupportTargetLanguage = true,
                            Name = "Spanish 🇪🇸"
                        },
                        new
                        {
                            Id = 5,
                            Code = "fr",
                            IsSupportInteface = true,
                            IsSupportNativeLanguage = true,
                            IsSupportTargetLanguage = true,
                            Name = "French 🇫🇷"
                        },
                        new
                        {
                            Id = 6,
                            Code = "ja",
                            IsSupportInteface = true,
                            IsSupportNativeLanguage = true,
                            IsSupportTargetLanguage = true,
                            Name = "Japanese 🇯🇵"
                        },
                        new
                        {
                            Id = 7,
                            Code = "zh-Hans",
                            IsSupportInteface = true,
                            IsSupportNativeLanguage = true,
                            IsSupportTargetLanguage = true,
                            Name = "Chinese 🇨🇳"
                        },
                        new
                        {
                            Id = 8,
                            Code = "cs",
                            IsSupportInteface = true,
                            IsSupportNativeLanguage = true,
                            IsSupportTargetLanguage = true,
                            Name = "Czech 🇨🇿"
                        },
                        new
                        {
                            Id = 9,
                            Code = "da",
                            IsSupportInteface = true,
                            IsSupportNativeLanguage = true,
                            IsSupportTargetLanguage = true,
                            Name = "Danish 🇩🇰"
                        },
                        new
                        {
                            Id = 10,
                            Code = "hi",
                            IsSupportInteface = true,
                            IsSupportNativeLanguage = true,
                            IsSupportTargetLanguage = true,
                            Name = "Hindi 🇮🇳"
                        },
                        new
                        {
                            Id = 11,
                            Code = "it",
                            IsSupportInteface = true,
                            IsSupportNativeLanguage = true,
                            IsSupportTargetLanguage = true,
                            Name = "Italian 🇮🇹"
                        },
                        new
                        {
                            Id = 12,
                            Code = "sv",
                            IsSupportInteface = true,
                            IsSupportNativeLanguage = true,
                            IsSupportTargetLanguage = true,
                            Name = "Swedish 🇸🇪"
                        },
                        new
                        {
                            Id = 13,
                            Code = "de",
                            IsSupportInteface = true,
                            IsSupportNativeLanguage = true,
                            IsSupportTargetLanguage = true,
                            Name = "German 🇩🇪"
                        },
                        new
                        {
                            Id = 14,
                            Code = "pl",
                            IsSupportInteface = true,
                            IsSupportNativeLanguage = true,
                            IsSupportTargetLanguage = true,
                            Name = "Polish 🇵🇱"
                        },
                        new
                        {
                            Id = 15,
                            Code = "tr",
                            IsSupportInteface = true,
                            IsSupportNativeLanguage = true,
                            IsSupportTargetLanguage = true,
                            Name = "Turkish 🇹🇷"
                        });
                });

            modelBuilder.Entity("TB.Database.Entities.TelegramUser", b =>
                {
                    b.Property<long>("TelegramUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsBot")
                        .HasColumnType("boolean");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("TelegramUserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TB.Database.Entities.UserSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("InterfaceLanguageId")
                        .HasColumnType("integer");

                    b.Property<int?>("NativeLanguageId")
                        .HasColumnType("integer");

                    b.Property<bool>("RecognizeEnglishMeaning")
                        .HasColumnType("boolean");

                    b.Property<int?>("TargetLanguageId")
                        .HasColumnType("integer");

                    b.Property<long>("TelegramUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("InterfaceLanguageId");

                    b.HasIndex("NativeLanguageId");

                    b.HasIndex("TargetLanguageId");

                    b.HasIndex("TelegramUserId")
                        .IsUnique();

                    b.ToTable("UserSettings");
                });

            modelBuilder.Entity("TB.Database.Entities.UserSettings", b =>
                {
                    b.HasOne("TB.Database.Entities.Language", "InterfaceLanguage")
                        .WithMany("UserSettingsInterfaceLangs")
                        .HasForeignKey("InterfaceLanguageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TB.Database.Entities.Language", "NativeLanguage")
                        .WithMany("UserSettingsNativeLangs")
                        .HasForeignKey("NativeLanguageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TB.Database.Entities.Language", "TargetLanguage")
                        .WithMany("UserSettingsTargetLangs")
                        .HasForeignKey("TargetLanguageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TB.Database.Entities.TelegramUser", "TelegramUser")
                        .WithOne("UserSettings")
                        .HasForeignKey("TB.Database.Entities.UserSettings", "TelegramUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InterfaceLanguage");

                    b.Navigation("NativeLanguage");

                    b.Navigation("TargetLanguage");

                    b.Navigation("TelegramUser");
                });

            modelBuilder.Entity("TB.Database.Entities.Language", b =>
                {
                    b.Navigation("UserSettingsInterfaceLangs");

                    b.Navigation("UserSettingsNativeLangs");

                    b.Navigation("UserSettingsTargetLangs");
                });

            modelBuilder.Entity("TB.Database.Entities.TelegramUser", b =>
                {
                    b.Navigation("UserSettings")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
